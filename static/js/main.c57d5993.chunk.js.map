{"version":3,"sources":["platform/AppProvider.js","components/generic/Container/Container.js","components/documentation/DocumentComponent.js","components/generic/Display/Display.js","components/generic/Button/Button.js","components/generic/Input/Input.js","components/generic/Tabs/Tabs.js","components/generic/Card/Card.js","components/generic/Panel/Panel.js","components/generic/Timer.js","views/DocumentationView.js","components/timers/Stopwatch.js","components/timers/Countdown.js","components/timers/XY.js","components/timers/Tabata.js","utils/helpers.js","views/TimersView.js","App.js","index.js"],"names":["AppContext","React","createContext","AppProvider","children","useState","selectedTimer","setSelectedTimer","settings","setSettings","startTime","setStartTime","statusMessage","setStatusMessage","timerCounting","setTimerCounting","counter","setCounter","isFrontSide","setFront","Provider","value","resetTimer","defaultSettings","Container","className","Section","styled","div","Article","Title","RenderComponent","Documentation","table","DocumentComponent","title","component","propDocs","map","doc","index","prop","description","type","defaultValue","Display","useContext","Button","props","id","isIconButton","iconName","classifiers","iconVisible","buttonAttributes","buttonStyle","iconVisibility","class","name","Input","label","placeholder","inputAttributes","setValue","onChange","e","target","Tabs","tabItems","tabSelected","includes","setTabSelected","handleChange","length","tabItem","checked","htmlFor","Card","side","cardStyle","Panel","Timer","toggleCount","flipSide","card","document","querySelector","classList","toggle","onClick","console","log","setting","flip","useEffect","isStarted","status","DEFAULT_SETTINGS","StopWatch","Countdown","XY","Tabata","getTimer","timerName","arr","find","timer","C","TimersView","keyName","timers","Stopwatch","item","v","utils","App","to","path","DocumentationView","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c57d5993.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nexport const AppContext = React.createContext({});\n\nconst AppProvider = ({ children }) => {\n\n    const [selectedTimer, setSelectedTimer]  = useState(\"Stopwatch\");\n    const [settings, setSettings] = useState();\n    const [startTime, setStartTime] = useState(\"00:00:00\");\n    const [statusMessage, setStatusMessage] = useState(\"\");\n    const [timerCounting, setTimerCounting] =  useState(false);\n    const [counter, setCounter] = useState(\"00:00:00\");\n    const [isFrontSide, setFront ] = useState(true);\n\n    const resetTimer = (defaultSettings, statusMessage, startTime) => {\n        setSettings(defaultSettings);\n        setStatusMessage(statusMessage);\n        setStartTime(startTime);\n    }\n\n\n    return <AppContext.Provider \n            value={\n                    {   selectedTimer, setSelectedTimer,\n                        settings, setSettings, \n                        startTime, setStartTime, \n                        statusMessage, setStatusMessage, \n                        timerCounting, setTimerCounting,\n                        counter, setCounter,\n                        isFrontSide, setFront,\n                        resetTimer\n                }}>\n            {children}\n        </AppContext.Provider>;\n};\n\nexport default AppProvider;","import PropTypes from 'prop-types';\nimport './Container.css';\n\nconst Container = ({...props}) => {\n  const { children }  = props;\n  return <div className=\"container\">{children}</div>;\n}\n\n\nContainer.propTypes  = {\n  children: PropTypes.node\n}\n\nexport default Container;","import styled from \"styled-components\";\n\n\nconst Section = styled.div`\n  width: 90%;\n  margin: 2rem;\n  min-width: 35rem;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  flex-direction: column;\n  margin-bottom: 10rem;\n\n`;\n\nconst Article = styled.div`\n  width: 100%;\n  height: 100%;\n  border-radius: 3rem;\n  box-shadow: 0.8rem 0.8rem 1.4rem var(--bgLight-2), -0.2rem -0.2rem 1.8rem var(--tint);\n  transition: transform 1s;\n  transform-style: preserve-3d;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  flex-direction: column;\n  padding: 2rem;\n`;\n\n\nconst Title = styled.div`\n  display: flex;\n  justify-content: center;\n  font-size: 2rem;\n`;\n\nconst RenderComponent = styled.div`\n  margin: 4rem 0;\n`;\n\nconst Documentation = styled.table``;\n\nconst DocumentComponent = ({title, component, propDocs}) => {\n  return (\n    <Section>\n          <Title>{title}</Title>\n          <RenderComponent>{component}</RenderComponent>\n          <Article>\n            <Documentation>\n              <tbody>\n              <tr key={1}>\n                <th>Prop</th>\n                <th>Description</th>\n                <th>Type</th>\n                <th>Default value</th>\n              </tr>\n              {propDocs.map((doc, index) => {\n                return (\n                  <tr key={index}>\n                    <td>{doc.prop}</td>\n                    <td>{doc.description}</td>\n                    <td>{doc.type}</td>\n                    <td>\n                      <code>{doc.defaultValue}</code>\n                    </td>\n                  </tr>\n                );\n              })}\n              </tbody>\n            </Documentation>\n          </Article>\n    </Section>\n  );\n}\n\nexport default DocumentComponent;\n","import  { useContext } from 'react';\nimport './Display.css';\nimport PropTypes from 'prop-types';\nimport {  AppContext } from '../../../platform/AppProvider';\n\nconst Display = () => {\n    const { timerCounting,  statusMessage, counter } = useContext(AppContext);\n\t\t\n    return (\n\n        // Return is stylized circular display\n        <div className=\"display_circular\">\n            <div className=\"marker\">\n                { statusMessage && <p className=\"header\">{ statusMessage }</p>}\n                <p className=\"value neonText\">{ counter }</p>\n            </div>\n        \n            { \n                // Animate if timer is on\n                !!timerCounting && \n                    <>\n                        <div className=\"display_circular_back-1\"></div>\n                        <div className=\"display_circular_back-2\"></div>\n                    </>\n            }\n        </div>\n\n    );\n}\n\n\nDisplay.propTypes = {\n\tisStarted: PropTypes.bool,\n    value: PropTypes.string,\n    status: PropTypes.string\n}\n\n\nexport default Display;\n","import './Button.css';\nimport className from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst Button =  ({...props}) => {\n    const { \n        id,\n        value = \"\",\n        isIconButton = false, \n        iconName = \"\", \n        classifiers = \"btn_primary\", \n        iconVisible = true,\n        children, \n        ...buttonAttributes} = props; \n\n    const buttonStyle = [{\n        \"icon_btn\": isIconButton,\n        \"btn\": !isIconButton\n    }];\n\n    const iconVisibility = [{\n        \"show\": iconVisible,\n        \"hide\": !iconVisible\n    }];\n\n    return (   \n\n        // Returns a stylized text or icon button\n        <div id={id} value={value} className={className(buttonStyle, classifiers)} { ...buttonAttributes} >\n            { isIconButton && \n                <ion-icon value={value} class={className(iconVisibility)} name={iconName}></ion-icon>\n            }\n            {!isIconButton && children}\n        </div>\n    );\n\n}\n\nButton.propTypes = {\n    id: PropTypes.string,\n    value: PropTypes.string,\n    isIconButton:  PropTypes.bool,\n    iconName: PropTypes.string,\n    classifiers: PropTypes.string,\n    iconVisible: PropTypes.bool,\n\tonClick: PropTypes.func.isRequired\n}\n\nexport default Button;\n","import { useState } from 'react';\nimport './Input.css';\nimport PropTypes from 'prop-types';\n\nconst Input = ({...props}) => {\n    \n    const { label, placeholder, ...inputAttributes } = props;\n    const [value, setValue] = useState(props.value ?? \"\")\n\n    const handleChange = (e) => {\n        setValue(e.target.value);\n        if (props.onChange) props.onChange(e);\n    }\n\n    return (\n        <>\n        {label && \n            <fieldset>\n                <label className=\"settings-label\" >{label}</label>\n                <input  {...inputAttributes} value={value} placeholder={placeholder} onChange={handleChange} />\n            </fieldset>\n        }\n        </>\n    );\n\n}\n\nInput.propTypes = {\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string,\n    placeholder: PropTypes.string,\n    onChange: PropTypes.func\n}\n\nexport default Input;","import { useContext } from 'react';\nimport { AppContext } from '../../../platform/AppProvider';\nimport { Fragment } from 'react';\nimport './Tabs.css';\nimport PropTypes from 'prop-types';\n\nconst Tabs = ({ tabItems }) => {\n\n    const {selectedTimer, setSelectedTimer } = useContext(AppContext);\n    \n    // select tab if included in tab list provided, otherwise select first item in tab list\n    const tabSelected  = tabItems.includes(selectedTimer)? selectedTimer : tabItems[0];\n    \n    const setTabSelected = setSelectedTimer;\n    \n    const handleChange =  (e) => {\n        const value = e.target.value || tabSelected;\n        setTabSelected(value)\n    }\n\n    return  (\n        <div className=\"btn_bar\">\n            <div className=\"tab_control\">\n                { tabItems.length <= 4 && tabItems.map((tabItem, index) =>\n                    <Fragment key={index}>\n                        <input  type=\"radio\" \n                                name={\"radio\" + (index + 1)} \n                                value={tabItem} \n                                id={\"tab-\" + (index + 1)} \n                                checked={tabSelected === tabItem} \n                                onChange={handleChange}\n                        />\n                        <label htmlFor={\"tab-\" + (index + 1)} \n                                className={\"tab_control_\" + (index+1)}>\n                            <p>{tabItem}</p>\n                        </label>\n                    </Fragment>\n                )}\n                <div className=\"tab_control_color\"></div>\n            </div>\n        </div>\n    );\n}\n\n\nTabs.propTypes = {\n    tabItems: PropTypes.arrayOf(PropTypes.string),\n    onChange: PropTypes.func\n}\n\nexport default Tabs;","import './Card.css';\nimport className from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst Card =  ({...props}) => {\n    const { side =\"front\", children } = props;\n\n    const cardStyle = [{\n        [`panel_face_${side}`]: side? true : false\n    }];\n\n    return (\n        <div className={className(cardStyle)}>\n            { children }\n        </div>\n    );\n}\n\nCard.propTypes = {\n    side: PropTypes.string,\n    children: PropTypes.node\n}\n\nexport default Card;","import './Panel.css';\nimport PropTypes from 'prop-types';\n\nconst Panel =  ({...props}) => {\n  const { id = \"\", children }  = props;\n\n  return (\n    <div className=\"panel\">\n        <div className=\"panel_inner\" id={id}>\n            {children}\n        </div>\n    </div>\n  );\n}\n\n\nPanel.propTypes  = {\n  id: PropTypes.string,\n  children: PropTypes.node\n}\n\nexport default Panel;","import { useContext } from 'react';\nimport {  AppContext } from '../../platform/AppProvider';\nimport PropTypes from 'prop-types';\nimport Card from \"./Card/Card\";\nimport Display from \"./Display/Display\";\nimport Input from \"./Input/Input\";\nimport Button  from \"./Button/Button\";\n\n\nconst Timer = () => {\n\n  const { settings, startTime, timerCounting, setTimerCounting, setCounter, isFrontSide, setFront } = useContext(AppContext);\n\n  // Toggle the counter and hand-off to parent timer\n  const toggleCount = (e) => {\n      setTimerCounting(!timerCounting);\n  }\n\n  // Flips the card to display settings\n  const flipSide = () => {\n      setFront(!isFrontSide);\n      const card = document.querySelector(\"#timer_panel\");\n      if (card) card.classList.toggle('is-flipped');\n  }\n\n  // Save settings\n  const saveSettings  = (e) => {\n    console.log(e.target);\n  }\n\n  // Reset the counter\n  const reset = (e) => {\n    setCounter(startTime || \"00:00:00\");\n    console.log(\"reset\");\n  }\n\n  return (\n    <>\n      <Card side=\"front\">\n        <Display  />\n\n        <div className=\"btn_bar\">\n            {timerCounting &&\n                  <Button \n                      id = \"pause_btn\"\n                      value=\"pause\"\n                      classifiers=\"primary\" \n                      isIconButton={true} \n                      onClick={toggleCount} \n                      iconName=\"pause\"\n                  />\n            }\n            {!timerCounting && \n                  <Button \n                      id = \"start_btn\"\n                      value=\"start\"\n                      classifiers=\"primary\" \n                      isIconButton={true} \n                      onClick={toggleCount} \n                      iconName=\"play\"\n                  />\n            \n            }\n\n            <Button \n              id = \"reset_btn\"\n              value=\"reset\"\n              classifiers = \"primary\"\n              isIconButton = {true}\n              onClick={reset}\n              iconName=\"refresh-outline\"\n            />\n          \n            {settings && <Button \n              id = \"settings_btn\"\n              value=\"settings\"\n              classifiers = \"secondary\"\n              isIconButton = {true}\n              onClick={flipSide}\n              iconName=\"settings\"\n            />}\n        </div>\n      </Card>\n      <Card side=\"back\">\n            <h1>Settings</h1>\n            {settings && \n              <div className=\"settings-form\">\n                  {settings.map((setting, index) =>  \n                      <Input key={index} \n                             label={setting.label} \n                              placeholder={setting.placeholder} \n                              value={setting.value} \n                              id={`settings${index}`}\n                      />)\n                  }\n              </div>\n              }\n            <div className=\"btn_bar\">\n              <Button \n                  id = \"back_btn\"\n                  value=\"back\"\n                  isIconButton = {true}\n                  onClick={flipSide}\n                  iconName=\"arrow-back-outline\"\n              />\n              <Button onClick={saveSettings}>\n                Save\n              </Button>\n            </div>\n      </Card>\n    </>\n  );\n\n\n  \n}\n\nTimer.propTypes = {\n  settings: PropTypes.array,\n  statusMessage: PropTypes.string,\n  startTime: PropTypes.string,\n  onChange: PropTypes.func\n}\n\nexport default Timer;\n","import styled from \"styled-components\";\nimport { useContext, useEffect } from 'react';\nimport { AppContext } from '../platform/AppProvider';\nimport DocumentComponent from \"../components/documentation/DocumentComponent\";\nimport Display from \"../components/generic/Display/Display\";\nimport Button from \"../components/generic/Button/Button\";\nimport Input from \"../components/generic/Input/Input\";\nimport Tabs from \"../components/generic/Tabs/Tabs\";\nimport Card from \"../components/generic/Card/Card\";\nimport Panel from \"../components/generic/Panel/Panel\";\nimport Timer from \"../components/generic/Timer\";\n\n\nconst Title = styled.div`\n  font-size: 2rem;\n`;\n\n\nconst Documentation = () => {\n\n  const { resetTimer } = useContext(AppContext);\n\n\n  const flip = () => {\n    const card = document.querySelector(\"#testcard\");\n    if (card) card.classList.toggle('is-flipped');\n  }\n\n  useEffect(() => {\n   resetTimer(null, \"Status Text\", \"00:00:00\"); \n  })\n\n  return (\n    <>\n      <Title>Documentation</Title>\n\n\n      <DocumentComponent\n        title=\"Generic Timer\"\n        component={<Panel><Timer /></Panel>}\n        propDocs={[\n          {\n            prop: \"settings\",\n            description: \"Collection that defines the allowed settings for a timer\",\n            type: \"array of objects - [{label: 'label1', value: 'value1', placeholder: 'placeholder1'}, {...}]\",\n            defaultValue: \"Optional. Default: []\",\n          },\n          {\n            prop: \"statusMessage\",\n            description: \"Status message that can be used for rounds/rest\",\n            type: \"string\",\n            defaultValue: \"Optional. Default: None\",\n          },\n          {\n            prop: \"startTime\",\n            description: \"Starting time for the timer\",\n            type: \"string\",\n            defaultValue: \"Optional. Default: 00:00:00\",\n          },\n          {\n            prop: \"onChange\",\n            description: \"Event handler for capturing values input on change\",\n            type: \"function\",\n            defaultValue: \"Optional. Default: None\",\n          }\n\n        ]}\n      />   \n\n      <DocumentComponent\n        title=\"Circular Display \"\n        component={<Display isStarted={true} status=\"Status Text\" value=\"00:10:00\" />}\n        propDocs={[\n          {\n            prop: \"isStarted\",\n            description: \"Animates the circular display\",\n            type: \"bool\",\n            defaultValue: \"Optional. Default: false\",\n          },\n          {\n            prop: \"status\",\n            description: \"Status message that can be used for rounds/rest\",\n            type: \"string\",\n            defaultValue: \"Optional. Default: None\",\n          },\n          {\n            prop: \"value\",\n            description: \"Value to be displayed\",\n            type: \"string\",\n            defaultValue: \"Optional. Default: 00:00:00\",\n          }\n        ]}\n      />    \n\n      <DocumentComponent\n        title=\"Button \"\n        component={<Button onClick={() => console.log(\"test\")}>Text Button</Button>}\n        propDocs={[\n          {\n            prop: \"id\",\n            description: \"Identifier for the button\",\n            type: \"string\",\n            defaultValue: \"Optional. Default: None\",\n          },\n          {\n            prop: \"value\",\n            description: \"Identifier for the action useful to identify the event\",\n            type: \"string\",\n            defaultValue: \"Optional. Default: None\"\n          },\n          {\n            prop: \"isIconButton\",\n            description: \"Creates an icon button\",\n            type: \"boolean\",\n            defaultValue: \"Optional. Default: false\"\n          },\n          {\n            prop: \"iconName\",\n            description: \"Name of the icon taken from ion icons. Applicable only when isIconButton is true\",\n            type: \"string\",\n            defaultValue: \"Optional. Default: None\"\n          },\n          {\n            prop: \"iconVisible\",\n            description: \"Sets the visibility of the icon in an Icon Button. Applicable only when isIconButton is true\",\n            type: \"bool\",\n            defaultValue: \"Optional. Default: true\"\n          },\n          {\n            prop: \"classifiers\",\n            description: \"CSS classes to append additional styles\",\n            type:  \"string\",\n            defaultValue:  \"Optional. Default: 'btn_primary' for text buttons. Possible values for icon buttons: 'primary', 'secondary'\"\n          },\n          {\n            prop: \"onClick\",\n            description: \"Event handler for clicking on a button\",\n            type:  \"function\",\n            defaultValue:  \"Required. Default: None\"\n          },\n        ]}\n      />\n\n      <DocumentComponent\n        title=\"Button (with Icon configuration)\"\n        component={<Button \n          id = \"settings_btn\"\n          value=\"settings\"\n          classifiers = \"secondary\"\n          isIconButton = {true}\n          onClick={()=>console.log(\"icon button\")}\n          iconName=\"settings\"\n        />}\n        propDocs={[\n          {\n            prop: \"id\",\n            description: \"Identifier for the button\",\n            type: \"string\",\n            defaultValue: \"Optional. Default: None\",\n          },\n          {\n            prop: \"value\",\n            description: \"Identifier for the action useful to identify the event\",\n            type: \"string\",\n            defaultValue: \"Optional. Default: None\"\n          },\n          {\n            prop: \"isIconButton\",\n            description: \"Creates an icon button\",\n            type: \"boolean\",\n            defaultValue: \"Optional. Default: false\"\n          },\n          {\n            prop: \"iconName\",\n            description: \"Name of the icon taken from ion icons. Applicable only when isIconButton is true\",\n            type: \"string\",\n            defaultValue: \"Optional. Default: None\"\n          },\n          {\n            prop: \"iconVisible\",\n            description: \"Sets the visibility of the icon in an Icon Button. Applicable only when isIconButton is true\",\n            type: \"bool\",\n            defaultValue: \"Optional. Default: true\"\n          },\n          {\n            prop: \"classifiers\",\n            description: \"CSS classes to append additional styles\",\n            type:  \"string\",\n            defaultValue:  \"Optional. Default: 'btn_primary' for text buttons. Possible values for icon buttons: 'primary', 'secondary'\"\n          },\n          {\n            prop: \"onClick\",\n            description: \"Event handler for clicking on a button\",\n            type:  \"function\",\n            defaultValue:  \"Required. Default: None\"\n          },\n        ]}\n      />\n\n      <DocumentComponent\n        title=\"Input \"\n        component={<Input label=\"Test Label\" />}\n        propDocs={[\n          {\n            prop: \"label\",\n            description: \"Label of the input field\",\n            type: \"String\",\n            defaultValue: \"Required. Default: None\",\n          },\n          {\n            prop: \"value\",\n            description: \"Initial value passed to the input\",\n            type: \"String\",\n            defaultValue: \"Optional. Default: None\",\n          },\n          {\n            prop: \"placeholder\",\n            description: \"Input placeholder text\",\n            type: \"String\",\n            defaultValue: \"Optional. Default: None\",\n          },\n          {\n            prop: \"onChange\",\n            description: \"Event handler for capturing keyboard inputs\",\n            type:  \"function\",\n            defaultValue:  \"Optional. Default: None\"\n          }\n\n\n        ]}\n      />    \n\n      <DocumentComponent\n        title=\"Tabs \"\n        component={<Tabs tabItems={[\"Tab 1\", \"Tab 2\", \"Tab 3\", \"Tab 4\"]} />}\n        propDocs={[\n          {\n            prop: \"tabItems\",\n            description: \"Array of tab labels. Max 4 tabs. If more, the control will not render\",\n            type: \"Array of strings\",\n            defaultValue: \"Optional. Default: []\",\n          },\n          {\n            prop: \"onChange\",\n            description: \"Event handler for capturing the selected tab\",\n            type: \"function\",\n            defaultValue: \"Optional. Default: None\",\n          }\n        ]}\n      />    \n\n      <DocumentComponent\n        title=\"Card \"\n        component={\n          <Panel id=\"testcard\">\n            <Card side=\"front\">\n              front side\n              <Button onClick={flip}>Flip</Button>\n            </Card>\n            <Card side=\"back\">\n              back side\n              <Button onClick={flip}>Flip Again</Button>\n            </Card>\n          </Panel>}\n        propDocs={[\n          {\n            prop: \"side\",\n            description: `Card container that flips using css. \n            Two Cards (front and back) need to be defined in order for flipping to work`,\n            type: \"string\",\n            defaultValue: \"Optional. Default: 'front'. Possible values: 'front' |  'back'\",\n          },\n          {\n            prop: \"Children Nodes\",\n            description: `Accepts any React and HTML valid nodes. \n            An event within a child element of the card could trigger the flipping.\n            The event handler should query the id of Panel container and apply toggle('is-flipped') to\n            the queried element`,\n            type: \"node\",\n            defaultValue: \"Optional. Default: None\",\n          }\n        ]}\n      /> \n\n      <DocumentComponent\n        title=\"Panel \"\n        component={<Panel >Content goes here</Panel>}\n        propDocs={[\n          {\n            prop: \"id\",\n            description: \"Identifier for the panel that will allow flipping the cards\",\n            type: \"string\",\n            defaultValue: \"Optional. Default: None\",\n          },\n          {\n            prop: \"Children Nodes\",\n            description: \"Accepts any React and HTML valid nodes\",\n            type: \"node\",\n            defaultValue: \"Optional. Default: None\",\n          }\n        ]}\n      />\n\n      <DocumentComponent\n        title=\"Container \"\n        component=\"Generic Empty Container\"\n        propDocs={[\n          {\n            prop: \"Children Nodes\",\n            description: \"Accepts any React and HTML valid nodes\",\n            type: \"node\",\n            defaultValue: \"Optional. Default: None\",\n          }\n        ]}\n      />           \n\n\n    </>\n  );\n\n}\n\nexport default Documentation;\n","import { useContext, useEffect } from 'react';\nimport Timer from \"../generic/Timer\";\nimport {  AppContext } from '../../platform/AppProvider';\n\nconst DEFAULT_SETTINGS = [\n  {label: \"Start Time\", value: \"00:00:00\", placeholder: \"Start the timer at this time\"},\n  {label: \"Stop Time\", value: \"00:30:00\", placeholder: \"Stop the timer at this time\"}\n];\n\nconst StopWatch = ()  =>  {\n  const { setSettings, setStatusMessage } = useContext(AppContext);\n\n  useEffect(() => {\n    setSettings(DEFAULT_SETTINGS);\n    setStatusMessage(\"Count to 00:30:00\");\n\n  }, [setSettings, setStatusMessage]);\n\n  return <Timer />;\n}\n\nexport default StopWatch;\n","import { useContext, useEffect } from 'react';\nimport {  AppContext } from '../../platform/AppProvider';\nimport Timer from '../../components/generic/Timer';\n\nconst DEFAULT_SETTINGS = [\n  {label: \"Start Time\", value: \"00:30:00\", placeholder: \"Start the timer at this time\"},\n  {label: \"Stop Time\", value:\"00:10:00\", placeholder: \"Stop the timer at this time\"},\n  {label: \"Another setting\", placeholder: \"TBD\"}\n];\n\nconst Countdown = () => {\n  const { setSettings, setStatusMessage, setStartTime } = useContext(AppContext);\n\n  useEffect(() => {\n\n    setSettings(DEFAULT_SETTINGS);\n    setStatusMessage(\"Count from 00:30:00\");\n    setStartTime(\"00:30:00\");\n\n  }, [setSettings, setStatusMessage, setStartTime]);\n\n  return <Timer />;\n}\n\nexport default Countdown;\n","import { useContext, useEffect } from 'react';\nimport Timer from \"../generic/Timer\";\nimport {  AppContext } from '../../platform/AppProvider';\n\nconst DEFAULT_SETTINGS = [\n  {label: \"Start Time\", value: \"00:20:10\", placeholder: \"Start the timer at this time\"},\n  {label: \"Stop Time\", value:\"00:00:00\", placeholder: \"Stop the timer at this time\"},\n  {label: \"Rounds\", value:\"2\", placeholder: \"Stops after that many rounds\"}\n];\n\nconst XY = () => {\n  const { setSettings, setStatusMessage, setStartTime } = useContext(AppContext);\n\n  useEffect(() => {\n    setSettings(DEFAULT_SETTINGS);\n    setStatusMessage(\"Round 1 of 2\");\n    setStartTime(\"00:20:10\");\n  }, [setSettings, setStatusMessage, setStartTime]);\n\n  return <Timer />;\n}\n\nexport default XY;","import { useContext, useEffect } from 'react';\nimport Timer from \"../generic/Timer\";\nimport {  AppContext } from '../../platform/AppProvider';\n\nconst DEFAULT_SETTINGS = [\n  {label: \"Work Time\", value: \"00:45:00\", placeholder: \"Start the timer at this time\"},\n  {label: \"Rest Time\", value:\"00:10:00\", placeholder: \"Timer will rest for that duration\"},\n  {label: \"Rounds\", value:\"2\", placeholder: \"Stops after that many rounds\"}\n];\n\nconst Tabata = ()  => {\n  const { setSettings, setStatusMessage, setStartTime } = useContext(AppContext);\n  \n  useEffect(() => {\n    setSettings(DEFAULT_SETTINGS);\n    setStatusMessage(\"Work - Round 1 of 2\");\n    setStartTime(\"00:45:00\");\n  }, [setSettings, setStatusMessage, setStartTime]);\n\n  return <Timer />;\n  \n}\n\nexport default Tabata;","// Add helpers here. This is usually code that is just JS and not React code. Example: write a function that\n// calculates number of minutes when passed in seconds. Things of this nature that you don't want to copy/paste\n// everywhere.\n\nexport function readCollection(arr, keyName)  {\n    return arr.map((item) => {\n        return item[keyName];\n    });\n}\n\n\n\nexport function getTimer(timerName, arr)  {\n    function isTimer(timer) {\n        return timer.title === timerName;\n    }\n    return arr.find((isTimer)).C;\n}\n","import {  useContext, useEffect } from 'react';\nimport { AppContext } from '../platform/AppProvider';\nimport Tabs  from \"../components/generic/Tabs/Tabs\";\nimport Panel from \"../components/generic/Panel/Panel\";\n\nimport Stopwatch from \"../components/timers/Stopwatch\";\nimport Countdown from \"../components/timers/Countdown\";\nimport XY from \"../components/timers/XY\";\nimport Tabata from \"../components/timers/Tabata\";\nimport * as utils from '../utils/helpers.js';\n\nconst TimersView = () => {\n  \n  const {selectedTimer, setSelectedTimer} = useContext(AppContext);\n  \n  const timers = [\n    { title: \"Stopwatch\", C: <Stopwatch /> },\n    { title: \"Countdown\", C: <Countdown /> },\n    { title: \"XY\", C: <XY /> },\n    { title: \"Tabata\", C: <Tabata /> },\n  ];\n\n  const handleChange =  (v) => {\n    setSelectedTimer(v);\n  }\n\n  // Switching timers\n  useEffect(() => {\n    console.log(`Mount ${selectedTimer}`);\n\n    return () => console.log(`UnMount ${selectedTimer}`);\n\n  }, [selectedTimer]);\n\n\n  return (\n    <>\n      <Tabs tabItems={utils.readCollection(timers, 'title')} \n            onChange={handleChange} />\n      <Panel id=\"timer_panel\">\n        {utils.getTimer(selectedTimer, timers)}\n      </Panel>\n    </>\n\n  );\n  \n\n}\n\n\nexport default TimersView;\n","import React from \"react\";\nimport AppProvider from './platform/AppProvider';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Container from \"./components/generic/Container/Container\";\nimport DocumentationView from \"./views/DocumentationView\";\nimport TimersView from \"./views/TimersView\";\n\n\nconst App = () => {\n  return (\n      <Router>\n        <nav className=\"navigation\">\n            <ul>\n              <li key={1}>\n                <Link to=\"/\">Timers</Link>\n              </li>\n              <li key={2}>\n                <Link to=\"/docs\">Documentation</Link>\n              </li>\n            </ul>\n          </nav>\n          <br />\n        <AppProvider>\n          <Container>\n            <Switch>\n                <Route path=\"/docs\">\n                  <DocumentationView />\n                </Route>\n                <Route path=\"/\">\n                  <TimersView />\n                </Route>\n              </Switch>\n          </Container>\n        </AppProvider>\n      </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}